[build-system]
requires = ["flit_core>=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "akaihola-tools"
version = "0.1.0"
description = "Collection of useful Python tools"
authors = [
    {name = "Antti Kaihola", email = "13725+akaihola@users.noreply.github.com"},
]
readme = "README.rst"
requires-python = ">=3.9"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = []

[project.scripts]
tools = "akaihola_tools.tools:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
]
github-clone-dev = [
    "gitpython>=3.1.30",
    "click>=8.0.0",
]

[tool.flit.module]
name = "akaihola_tools"

[tool.isort]
profile = "black"

[tool.darker]
src = [
    ".",
]
revision = "master..."
isort = true

[tool.graylint]
src = [
    ".",
]
revision = "master..."
lint = [
    "mypy",
    "pydocstyle",
    "ruff check --fix",
]

[tool.ruff]
target-version = "py39"
output-format = "concise"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812",  # Trailing comma missing
    "D203",  # One blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "D400",  # First line should end with a period (duplicates D415)
]
# Keep only these auto-fixing options
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "ANN001",  # Missing type annotation for function argument
    "ANN201",  # Missing return type annotation for public function
    "ANN204",  # Missing return type annotation for special method `__init__`
    "INP001",  # File is part of an implicit namespace package. Add an `__init__.py`.
    "C408",  # Unnecessary `dict` call (rewrite as a literal)
    "S101",  # Use of `assert` detected
]

[tool.pytest.ini_options]
# Also run test functions found in tool scripts:
python_files = "*.py"
